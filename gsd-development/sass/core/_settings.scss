/**
 * @author     Goncalo Silva Dias <mail@gsdias.pt>
 * @copyright  2014-2015 GSDias
 *
 * @link       https://bitbucket.org/gsdias/gsdias-cms/downloads
 * @since      File available since Release 1.0
 */

$font-arial: 'Josefin Sans', "Comic Sans MS", cursive, sans-serif;

// normal text
$text-color: #262626;
// border color
$border-color: rgba(46,130,147,.5);

$gsd-color: #276876;

$defeitos: webkit moz ms o;

$tablet-port: 768px;
$tablet-land: 1024px;

@mixin prefixs($propriedade, $valor, $prefixos: $defeitos) {
    @each $prefixo in $prefixos {
        -#{$prefixo}-#{$propriedade}: #{$valor};
    }
    #{$propriedade}: #{$valor};
}

@mixin gradient($first: #000, $last: #fff) {
    background: $first;
	background: -moz-linear-gradient(center top, #{$first} 1%, #{$last} 100%) repeat scroll 0 0 transparent;
	background: -webkit-gradient(linear, left top, left bottom, color-stop(1%, #{$first}), color-stop(100%, #{$last}));
	background: -webkit-linear-gradient(top, #{$first} 0%, #{$last} 100%);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr = '#{$first}', endColorstr = '#{$last}', GradientType = 0);
	-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr = '#{$first}', endColorstr = '#{$last}', GradientType = 0)";
    background: -o-linear-gradient(top, #{$first} 0%, #{$last} 100%);
	background: -ms-linear-gradient(top, #{$first} 0%, #{$last} 100%);
}

@mixin opacity($opacity) {
    opacity: $opacity;
    filter: alpha(opacity = $opacity);
    -ms-filter: alpha(opacity = $opacity);
}

// Converts px to em from a base context. Adapted from http://web-design-weekly.com/blog/snippets/converts-pixels-to-ems-with-sass/
$browser-context: 16; // Default
@function em($pixels, $context: $browser-context) {
	@if unitless($pixels){
		@return ($pixels/$context) * 1em
	}
	@elseif (unit($pixels) == "px") {
		@return (strip-units($pixels)/$context) * 1em
	}
	@elseif (unit($pixels) == "em") {
		@return $pixels
	} @else {
		@return $pixels * 1em
	}
}

// Removes units from a size string, e.g. strip-units(13.48cm) gives 13.48. See http://stackoverflow.com/a/12335841/486434
@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}
